/****************************************************************************
** Meta object code from reading C++ file 'tst_lcs_init_test.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_lcs_init_test.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_LcsInitTest_t {
    QByteArrayData data[35];
    char stringdata0[1177];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_LcsInitTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_LcsInitTest_t qt_meta_stringdata_LcsInitTest = {
    {
QT_MOC_LITERAL(0, 0, 11), // "LcsInitTest"
QT_MOC_LITERAL(1, 12, 30), // "test_uniniciated_left_relation"
QT_MOC_LITERAL(2, 43, 0), // ""
QT_MOC_LITERAL(3, 44, 31), // "test_uniniciated_right_relation"
QT_MOC_LITERAL(4, 76, 34), // "test_uniniciated_left_relatio..."
QT_MOC_LITERAL(5, 111, 35), // "test_uniniciated_right_relati..."
QT_MOC_LITERAL(6, 147, 26), // "test_uniniciated_increment"
QT_MOC_LITERAL(7, 174, 26), // "test_uniniciated_decremetn"
QT_MOC_LITERAL(8, 201, 32), // "test_uniniciated_change_relation"
QT_MOC_LITERAL(9, 234, 34), // "test_init_empty_left_left_rel..."
QT_MOC_LITERAL(10, 269, 35), // "test_init_empty_left_right_re..."
QT_MOC_LITERAL(11, 305, 38), // "test_init_empty_left_left_rel..."
QT_MOC_LITERAL(12, 344, 39), // "test_init_empty_left_right_re..."
QT_MOC_LITERAL(13, 384, 30), // "test_init_empty_left_increment"
QT_MOC_LITERAL(14, 415, 36), // "test_init_empty_left_change_r..."
QT_MOC_LITERAL(15, 452, 35), // "test_init_empty_right_left_re..."
QT_MOC_LITERAL(16, 488, 36), // "test_init_empty_right_right_r..."
QT_MOC_LITERAL(17, 525, 39), // "test_init_empty_right_left_re..."
QT_MOC_LITERAL(18, 565, 40), // "test_init_empty_right_right_r..."
QT_MOC_LITERAL(19, 606, 31), // "test_init_empty_right_increment"
QT_MOC_LITERAL(20, 638, 37), // "test_init_empty_right_change_..."
QT_MOC_LITERAL(21, 676, 34), // "test_init_empty_both_left_rel..."
QT_MOC_LITERAL(22, 711, 35), // "test_init_empty_both_right_re..."
QT_MOC_LITERAL(23, 747, 39), // "test_init_empty_both_right_re..."
QT_MOC_LITERAL(24, 787, 38), // "test_init_empty_both_left_rel..."
QT_MOC_LITERAL(25, 826, 30), // "test_init_empty_both_increment"
QT_MOC_LITERAL(26, 857, 36), // "test_init_empty_both_change_r..."
QT_MOC_LITERAL(27, 894, 33), // "test_init_full_both_left_rela..."
QT_MOC_LITERAL(28, 928, 34), // "test_init_full_both_right_rel..."
QT_MOC_LITERAL(29, 963, 37), // "test_init_full_both_left_rela..."
QT_MOC_LITERAL(30, 1001, 38), // "test_init_full_both_right_rel..."
QT_MOC_LITERAL(31, 1040, 34), // "test_init_full_both_increment..."
QT_MOC_LITERAL(32, 1075, 35), // "test_init_full_both_increment..."
QT_MOC_LITERAL(33, 1111, 29), // "test_init_full_both_decrement"
QT_MOC_LITERAL(34, 1141, 35) // "test_init_full_both_change_re..."

    },
    "LcsInitTest\0test_uniniciated_left_relation\0"
    "\0test_uniniciated_right_relation\0"
    "test_uniniciated_left_relation_idx\0"
    "test_uniniciated_right_relation_idx\0"
    "test_uniniciated_increment\0"
    "test_uniniciated_decremetn\0"
    "test_uniniciated_change_relation\0"
    "test_init_empty_left_left_relation\0"
    "test_init_empty_left_right_relation\0"
    "test_init_empty_left_left_relation_idx\0"
    "test_init_empty_left_right_relation_idx\0"
    "test_init_empty_left_increment\0"
    "test_init_empty_left_change_relation\0"
    "test_init_empty_right_left_relation\0"
    "test_init_empty_right_right_relation\0"
    "test_init_empty_right_left_relation_idx\0"
    "test_init_empty_right_right_relation_idx\0"
    "test_init_empty_right_increment\0"
    "test_init_empty_right_change_relation\0"
    "test_init_empty_both_left_relation\0"
    "test_init_empty_both_right_relation\0"
    "test_init_empty_both_right_relation_idx\0"
    "test_init_empty_both_left_relation_idx\0"
    "test_init_empty_both_increment\0"
    "test_init_empty_both_change_relation\0"
    "test_init_full_both_left_relation\0"
    "test_init_full_both_right_relation\0"
    "test_init_full_both_left_relation_idx\0"
    "test_init_full_both_right_relation_idx\0"
    "test_init_full_both_increment_left\0"
    "test_init_full_both_increment_right\0"
    "test_init_full_both_decrement\0"
    "test_init_full_both_change_relation"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_LcsInitTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      33,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  179,    2, 0x08 /* Private */,
       3,    0,  180,    2, 0x08 /* Private */,
       4,    0,  181,    2, 0x08 /* Private */,
       5,    0,  182,    2, 0x08 /* Private */,
       6,    0,  183,    2, 0x08 /* Private */,
       7,    0,  184,    2, 0x08 /* Private */,
       8,    0,  185,    2, 0x08 /* Private */,
       9,    0,  186,    2, 0x08 /* Private */,
      10,    0,  187,    2, 0x08 /* Private */,
      11,    0,  188,    2, 0x08 /* Private */,
      12,    0,  189,    2, 0x08 /* Private */,
      13,    0,  190,    2, 0x08 /* Private */,
      14,    0,  191,    2, 0x08 /* Private */,
      15,    0,  192,    2, 0x08 /* Private */,
      16,    0,  193,    2, 0x08 /* Private */,
      17,    0,  194,    2, 0x08 /* Private */,
      18,    0,  195,    2, 0x08 /* Private */,
      19,    0,  196,    2, 0x08 /* Private */,
      20,    0,  197,    2, 0x08 /* Private */,
      21,    0,  198,    2, 0x08 /* Private */,
      22,    0,  199,    2, 0x08 /* Private */,
      23,    0,  200,    2, 0x08 /* Private */,
      24,    0,  201,    2, 0x08 /* Private */,
      25,    0,  202,    2, 0x08 /* Private */,
      26,    0,  203,    2, 0x08 /* Private */,
      27,    0,  204,    2, 0x08 /* Private */,
      28,    0,  205,    2, 0x08 /* Private */,
      29,    0,  206,    2, 0x08 /* Private */,
      30,    0,  207,    2, 0x08 /* Private */,
      31,    0,  208,    2, 0x08 /* Private */,
      32,    0,  209,    2, 0x08 /* Private */,
      33,    0,  210,    2, 0x08 /* Private */,
      34,    0,  211,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void LcsInitTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        LcsInitTest *_t = static_cast<LcsInitTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->test_uniniciated_left_relation(); break;
        case 1: _t->test_uniniciated_right_relation(); break;
        case 2: _t->test_uniniciated_left_relation_idx(); break;
        case 3: _t->test_uniniciated_right_relation_idx(); break;
        case 4: _t->test_uniniciated_increment(); break;
        case 5: _t->test_uniniciated_decremetn(); break;
        case 6: _t->test_uniniciated_change_relation(); break;
        case 7: _t->test_init_empty_left_left_relation(); break;
        case 8: _t->test_init_empty_left_right_relation(); break;
        case 9: _t->test_init_empty_left_left_relation_idx(); break;
        case 10: _t->test_init_empty_left_right_relation_idx(); break;
        case 11: _t->test_init_empty_left_increment(); break;
        case 12: _t->test_init_empty_left_change_relation(); break;
        case 13: _t->test_init_empty_right_left_relation(); break;
        case 14: _t->test_init_empty_right_right_relation(); break;
        case 15: _t->test_init_empty_right_left_relation_idx(); break;
        case 16: _t->test_init_empty_right_right_relation_idx(); break;
        case 17: _t->test_init_empty_right_increment(); break;
        case 18: _t->test_init_empty_right_change_relation(); break;
        case 19: _t->test_init_empty_both_left_relation(); break;
        case 20: _t->test_init_empty_both_right_relation(); break;
        case 21: _t->test_init_empty_both_right_relation_idx(); break;
        case 22: _t->test_init_empty_both_left_relation_idx(); break;
        case 23: _t->test_init_empty_both_increment(); break;
        case 24: _t->test_init_empty_both_change_relation(); break;
        case 25: _t->test_init_full_both_left_relation(); break;
        case 26: _t->test_init_full_both_right_relation(); break;
        case 27: _t->test_init_full_both_left_relation_idx(); break;
        case 28: _t->test_init_full_both_right_relation_idx(); break;
        case 29: _t->test_init_full_both_increment_left(); break;
        case 30: _t->test_init_full_both_increment_right(); break;
        case 31: _t->test_init_full_both_decrement(); break;
        case 32: _t->test_init_full_both_change_relation(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject LcsInitTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_LcsInitTest.data,
      qt_meta_data_LcsInitTest,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *LcsInitTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *LcsInitTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_LcsInitTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int LcsInitTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 33)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 33;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 33)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 33;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
